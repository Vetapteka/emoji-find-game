{"version":3,"file":"static/js/448.3aca2310.chunk.js","mappings":"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","sources":["components/controls/PauseControl.tsx","components/borders/PenBorder.tsx","components/controls/TimeControl.tsx","constants.ts","components/borders/KeyboardBorder.tsx","components/keyboard/EmojiKeyboardSwitcher.tsx","components/keyboard/Keyboard.tsx","components/controls/TargetEmojiControl.tsx","components/controls/MergeEmojiControl.tsx","components/controls/SelectedEmojiControl.tsx","components/SelectedEmojiPanel.tsx","components/controls/WinCountControl.tsx","pages/GamePage.tsx"],"sourcesContent":["import React, { JSX } from 'react';\nimport Icon, { IconSizeEnum } from '../icons/Icon';\nimport { AppDispatch } from '../../store/store';\nimport { useAppDispatch } from '../../hooks/redux';\nimport { openModal } from '../../store/pages/pages.slice';\n\nfunction PauseControl(): JSX.Element {\n\tconst dispatch: AppDispatch = useAppDispatch();\n\tconst openPauseModalHandler = () => dispatch(openModal('PAUSE_MODAL'));\n\treturn (\n\t\t<Icon icon=\"PAUSE_ICON\" size={IconSizeEnum.S} onClick={openPauseModalHandler}/>\n\t);\n}\n\nexport default PauseControl;","import styled from 'styled-components';\nimport { JSX } from 'react';\n\ninterface PenBorderProps {\n\tisActive?: boolean;\n\tonClick?: () => void;\n\tchildren?: JSX.Element | null;\n\tsize?: string;\n\twidth?: string;\n\theight?: string;\n}\n\ninterface WrapperProps {\n\tsize?: string;\n\twidth?: string;\n\theight?: string;\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  height: ${({ size, height }) => height || size || '100px'};\n  width: ${({ size, width }) => width || size || '100px'};\n  position: relative;\n\n  & > * {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  & > img {\n    width: 80%;\n    height: 80%;\n    padding: 10%;\n  }\n`;\n\n\nfunction PenBorder({ isActive, onClick, children, size, height, width }: PenBorderProps) {\n\treturn (\n\t\t<Wrapper onClick={onClick} size={size} height={height} width={width}>\n\t\t\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 411 392\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t strokeDasharray={isActive ? '10 10' : 'none'}>\n\t\t\t\t<path\n\t\t\t\t\td=\"M403.796 232.787C403.654 241.062 404.948 281.387 403.796 289.571C402.415 299.385 405.468 315.147 403.796 324.916C403.796 363.159 403.796 364.317 367.5 377.57C243.63 383.869 110.689 386.187 102.387 387C81.2968 387 63.9452 384.961 43.7094 377.57C29.8659 372.513 9.13289 360.802 9.13289 343.583C9.13289 317.576 -3.27274 40.6209 14.9024 21.0543C30.6049 4.14964 256.4 10.4884 276.688 6.84824C308.384 6.84824 361.623 -0.768444 390.773 14.9225C403.112 21.5643 409.729 33.6464 403.796 50.2678C403.796 50.2678 403.796 229.611 403.796 241.518\"/>\n\t\t\t</svg>\n\t\t\t{children}\n\t\t</Wrapper>\n\t);\n}\n\nexport default PenBorder;","import React, { JSX } from 'react';\nimport PenBorder from '../borders/PenBorder';\nimport { IconSizeEnum } from '../icons/Icon';\n\nfunction TimeControl(): JSX.Element {\n\treturn (\n\t\t<PenBorder height={IconSizeEnum.XS} width={'100%'}>\n\t\t\t<div></div>\n\t\t</PenBorder>\n\t);\n}\n\nexport default TimeControl;","export const KEYBOARD_HEIGHT = '35vh';\n\nexport const ACTIVE_ICON_COLOR = 'white';\n\nexport const SELECTED_EMOJI_CONTAINER_SIZE = '12vh';\n\nexport const TARGET_EMOJI_CONTAINER_SIZE = '15vh';\n\nexport const MERGE_EMOJI_SIZE = '10vh';","import React, { JSX } from 'react';\nimport styled from 'styled-components';\nimport { KEYBOARD_HEIGHT } from '../../constants';\n\ninterface WrapperProps {\n\theight: string;\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  height: ${({ height }) => height};\n  position: relative;\n  z-index: 1;\n\n  & > .border {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  & > .switchers {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: calc(${KEYBOARD_HEIGHT} * 0.14);\n    width: 100%;\n    display: flex;\n\tz-index: 2;\n  }\n  \n  & > .keys {\n    position: absolute;\n\ttop: calc(${KEYBOARD_HEIGHT} * 0.14);\n\twidth: 96%;\n\theight: calc(${KEYBOARD_HEIGHT} * 0.80);\n\tbox-sizing: border-box;\n\tmargin: 0 2%;\n    overflow-y: scroll;\n    scroll-behavior: smooth;\n    border-radius: calc(0.04 * ${KEYBOARD_HEIGHT});\n\t\n    z-index: 2;\n  }\n  \n`;\n\ninterface KeyboardBorderProps {\n\theight: string;\n\tchildren: JSX.Element;\n}\n\nfunction KeyboardBorder({ height, children }: KeyboardBorderProps): JSX.Element {\n\treturn (\n\t\t<Wrapper height={height}>\n\t\t\t{children}\n\t\t\t<svg className={'border'} preserveAspectRatio=\"none\" viewBox=\"0 0 1429 1223\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M20.6243 5H366.309H662.192H1128.96H1201.12C1250.18 5 1299.37 7.29675 1348.68 7.29675H1382.55C1389.86 7.29675 1405.64 11.1294 1411.55 16.6855C1420.05 24.6871 1420.05 38.9439 1420.05 51.0921V51.6855C1425.25 79.2255 1413.24 398.17 1413.24 427.039C1413.24 444.454 1417.04 841.031 1417.04 858.241V936.33C1417.04 987.63 1420.94 1036.6 1420.94 1088.04C1420.94 1113.91 1422.07 1140.19 1422.89 1165.37C1423.22 1175.19 1423.65 1198.41 1417.04 1206.2C1410.31 1214.11 1402.93 1217.68 1393.6 1217.68C1360.81 1217.68 1039.73 1209.43 1007.55 1215.26H815.544C762.767 1215.26 490.333 1210.79 437.595 1210.79C373.997 1210.79 311.646 1208.49 248.151 1208.49H47.5469C31.4356 1208.49 10.1273 1200.78 10.1273 1178.64C10.1273 1150.96 8.90623 1115.9 8.90623 1088.04C8.90623 1057.54 5 1034.92 5 1005.19C5 981.208 6.95315 274.765 6.95315 251.9V180.701V32.5609C6.95315 20.4138 7.09203 5 20.6243 5Z\"/>\n\t\t\t\t<path\n\t\t\t\t\td=\"M7.04688 149.695C21.7599 149.695 241.636 149.695 256.047 149.695C285.009 149.695 316.657 149.695 345.547 149.695C463.462 149.695 578.508 147.399 696.369 147.399C726.818 147.399 757.764 145.517 788.161 147.399C802.561 148.29 1167.38 151.991 1182.55 151.991C1197.79 151.991 1401.65 158.186 1417.05 158.186\"/>\n\t\t\t\t<path d=\"M292 9L291.5 150\"/>\n\t\t\t\t<path d=\"M575 5V146\"/>\n\t\t\t\t<path d=\"M858 5V144\"/>\n\t\t\t\t<path d=\"M1137 5L1136.5 150\"/>\n\t\t\t</svg>\n\t\t</Wrapper>\n\n\t);\n}\n\nexport default KeyboardBorder;","import React, { JSX } from 'react';\nimport styled from 'styled-components';\nimport { ACTIVE_ICON_COLOR } from '../../constants';\n\ninterface WrapperProps {\n\tisActive: boolean;\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  width: 20%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n\n  & > div {\n    padding: 0.3vh;\n    box-sizing: border-box;\n    z-index: 2;\n    stroke: ${({ isActive }) => isActive && ACTIVE_ICON_COLOR}\n  }\n\n  & > svg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 87%;\n    z-index: 1;\n  }\n`;\n\ninterface EmojiSwitcherProps {\n\tonClick?: () => void;\n\tchildren: JSX.Element;\n\tisActive: boolean;\n}\n\nfunction EmojiKeyboardSwitcher({ children, isActive, ...props }: EmojiSwitcherProps): JSX.Element {\n\treturn (\n\t\t<Wrapper isActive={isActive} {...props}>\n\t\t\t{children}\n\t\t\t{isActive &&\n\t\t\t\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 266 157\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M10.7475 28.7323C11.0891 25.6572 15.9267 23.0474 17.8885 21.1945C21.6595 17.6331 25.8585 14.7617 30.5838 12.4665C31.9426 11.8066 38.1809 10.5122 38.8269 12.3784C40.269 16.5446 36.5985 19.3299 33.6694 21.5031C23.4391 29.0934 15.3048 38.6278 10.1744 50.2878C9.57331 51.6539 9.05902 52.3671 10.3948 50.8829C13.9235 46.9622 17.1452 42.8 21.0623 39.2456C25.1478 35.5384 29.0211 31.5753 33.1625 27.9389C36.3031 25.1812 39.8511 22.8451 42.8823 19.9823C45.7526 17.2715 48.6276 14.135 52.007 12.0698C54.6149 10.4761 56.6043 8.25918 59.5007 7.13278C61.1448 6.49344 60.8596 6.94958 60.0958 8.12459C56.7017 13.3464 51.7328 17.9607 47.2463 22.1863C41.0241 28.0468 34.7393 33.8185 28.4459 39.5982C24.6033 43.1271 21.6536 47.2116 18.2853 51.1694C14.657 55.4327 11.0275 59.8877 7.99241 64.592C7.6843 65.0696 5.733 68.2101 6.03082 67.3911C6.53466 66.0056 8.3274 64.5215 9.31483 63.5341C13.1783 59.6706 17.5753 56.3615 21.8338 52.9547C30.4414 46.0685 39.2003 39.3747 47.8193 32.5012C53.9903 27.5801 59.8879 22.2692 66.2892 17.646C70.9586 14.2737 75.5634 10.3919 80.4832 7.39726C82.8167 5.97684 82.2686 6.77418 80.7917 8.27888C76.0714 13.0883 71.4198 18.0675 66.7741 22.9578C55.4417 34.8866 44.1269 46.8383 33.449 59.3684C27.2051 66.6954 20.7248 73.9224 14.8029 81.497C13.48 83.189 12.7302 85.5642 11.1442 87.0511C11.011 87.176 12.9779 84.091 13.3923 83.6128C17.7268 78.6115 22.6466 74.2028 27.5863 69.8156C40.9926 57.9086 54.3954 46.0548 68.405 34.8596C74.1423 30.2749 79.8621 24.8448 86.1255 20.9741C88.6862 19.3917 91.1273 17.7855 93.5751 16.0371C94.7629 15.1887 95.5214 13.8297 96.8371 13.1718C98.7204 12.2302 95.829 15.4539 95.5588 15.7285C88.985 22.4083 82.6299 29.3065 76.1192 36.0497C63.0954 49.5387 48.217 61.3808 35.9396 75.5681C29.6261 82.8637 22.5051 89.4713 16.1473 96.7709C14.6205 98.524 12.6136 101.16 11.9597 103.449C11.9411 103.514 12.0692 102.696 12.2242 102.457C13.9631 99.7821 17.1376 97.6284 19.4093 95.4485C32.7287 82.6673 45.8454 69.9156 59.9195 57.9358C71.8273 47.8 84.2717 38.4143 96.5726 28.7764C105.807 21.5413 114.817 14.9124 124.917 8.98417C125.25 8.7883 128.19 7.23462 126.988 8.49928C121.323 14.4623 113.609 19.03 107.152 24.0598C88.9575 38.2323 71.3214 53.0189 54.0788 68.3168C48.624 73.1564 44.1312 79.0055 39.0032 84.1859C35.6893 87.5336 32.9798 91.1934 30.0989 94.8975C27.3343 98.452 24.0081 101.681 21.4591 105.389C18.721 109.371 16.1744 113.597 13.7449 117.775C12.6317 119.69 8.83559 125.15 10.0642 123.308C11.0888 121.771 13.9699 120.41 15.42 119.296C20.1632 115.653 24.9585 112.087 29.7242 108.474C44.7374 97.0934 58.0543 83.377 72.218 70.9837C80.1937 64.005 88.7732 57.9556 97.0355 51.3457C100.866 48.2812 104.715 45.2415 108.563 42.199C111.995 39.4847 115.073 36.2022 118.657 33.7135C125.422 29.0158 131.424 23.3801 137.876 18.2632C138.805 17.5267 143.144 14.4502 139.485 14.4502C136.92 14.4502 133.754 17.7977 131.903 19.2329C125.401 24.2754 119.383 29.502 113.301 35.0579C106.323 41.4329 99.1995 47.665 92.0984 53.9024C85.3205 59.856 78.8222 66.1686 71.8433 71.8874C66.0599 76.6266 60.6077 81.6764 54.3874 85.861C50.0378 88.787 46.0009 92.1027 41.9125 95.3824C32.7013 102.772 26.7073 113.166 19.8722 122.58C16.2375 127.586 12.9777 132.836 9.16055 137.744C8.50364 138.589 6.65579 140.511 8.36709 138.846C9.95329 137.303 11.8069 136.233 13.6127 134.967C17.0228 132.577 20.0614 129.732 23.2223 127.032C34.639 117.283 44.7551 106.123 56.371 96.5726C60.4808 93.1934 64.6673 89.8211 68.4491 86.0814C72.3047 82.2686 76.7796 79.1976 80.6595 75.4579C89.1759 67.2493 99.2911 60.878 108.739 53.8143C118.847 46.2566 129.454 39.5168 140.058 32.6996C146.497 28.5604 153.283 24.7091 159.895 20.8198C160.648 20.3768 163.992 18.7327 164.259 17.8003C164.48 17.0271 164.784 16.0989 165.294 15.442C165.713 14.9045 166.427 13.3041 167.234 13.3041C167.755 13.3041 166.305 15.02 166.242 15.1114C164.45 17.7107 162.687 20.2264 160.644 22.6492C152.162 32.7062 142.555 41.4882 132.168 49.5384C124.032 55.8435 115.468 61.5472 107.328 67.8319C84.7377 85.2753 59.6903 100.413 41.6921 122.911C37.262 128.448 31.878 133.244 27.432 138.802C25.6129 141.076 23.6539 143.227 21.8558 145.524C21.6223 145.823 19.0972 148.326 21.0623 147.442C30.0051 143.418 37.6632 135.314 44.7778 128.707C46.7195 126.904 48.3532 124.825 50.4201 123.153C52.3298 121.608 54.5087 120.41 56.2828 118.701C59.7898 115.322 63.308 111.959 67.0826 108.871C70.8088 105.822 73.8632 102.258 77.3975 99.0411C81.2183 95.5637 85.6649 92.6739 89.696 89.4315C101.319 80.0828 113.519 71.0317 125.82 62.6084C135.255 56.1478 144.579 49.5153 153.988 43.0145C160.969 38.1914 168.162 33.6673 174.948 28.5781C178.795 25.6929 183.262 22.5741 186.299 18.8362C187.226 17.6952 190.064 14.3915 189.407 15.7065C188.736 17.0472 186.691 18.5577 185.66 19.6297C183.088 22.3045 180.309 24.7685 177.703 27.4099C170.826 34.3805 163.365 40.756 156.434 47.687C146.507 57.6143 136.775 67.4698 126.195 76.7362C114.704 86.8008 103.554 97.0029 93.5751 108.563C89.3997 113.399 84.5108 117.581 80.2628 122.36C77.8442 125.081 75.0081 127.452 72.2401 129.809C70.1306 131.606 68.4973 133.837 66.2892 135.54C64.8984 136.613 63.314 137.275 61.9252 138.317C58.9098 140.579 56.5346 144.196 52.8886 145.458C51.728 145.86 48.0622 146.362 47.1581 145.458C41.1034 139.403 107.945 86.8559 116.365 80.3068C128.066 71.2056 140.647 63.8628 152.842 55.5114C166.006 46.4963 179.082 37.5073 191.853 27.9609C203.07 19.5766 214.694 11.7252 227.074 5.17118C227.935 4.7153 227.32 5.28534 226.941 5.54587C225.519 6.52408 224.252 7.73473 222.864 8.76376C213.002 16.0749 202.842 22.9044 193.22 30.5617C173.742 46.0615 155.073 62.7181 136.157 78.8962C130.672 83.5877 125.429 88.5809 119.869 93.1784C116.297 96.1326 113.283 99.5994 109.731 102.546C102.994 108.132 98.0749 115.73 92.4731 122.382C88.1193 127.552 86.6689 134.526 82.555 139.816C81.1187 141.662 78.0009 147.964 79.3811 146.075C90.6356 130.674 105.199 118.27 118.745 104.992C129.029 94.9116 140.025 85.5806 150.792 76.031C160.838 67.1203 172.211 59.7536 182.354 50.949C188.67 45.4665 195.206 40.1532 201.176 34.2865C205.081 30.4496 208.971 27.2284 213.651 24.3683C220.548 20.1536 227.098 16.384 234.678 13.5686C235 13.4489 239.912 11.7691 238.38 12.8633C234.266 15.8021 230.591 19.3576 226.875 22.7814C204.108 43.7599 176.274 58.9337 154.274 80.7917C142.671 92.3203 130.799 103.911 120.332 116.519C117.349 120.113 114.258 123.605 111.274 127.187C108.845 130.101 106.527 132.595 104.97 136.069C103.717 138.864 102.65 141.746 101.422 144.554C101.173 145.123 100.217 146.98 101.444 145.943C106.035 142.058 109.983 137.356 114.359 133.204C123.495 124.534 132.314 115.551 141.667 107.108C148.596 100.853 155.28 94.3404 162.672 88.638C169.478 83.3871 175.428 77.1478 182.045 71.667C187.371 67.256 191.796 61.8582 197.077 57.3407C203.212 52.0921 209.389 46.9541 215.767 42.0006C221.823 37.2973 228.541 33.5723 234.986 29.4376C238.805 26.9879 242.263 24.1612 245.918 21.5031C248.46 19.6542 251.112 17.1428 253.941 15.7285C254.703 15.3475 253.576 16.4427 253.456 16.522C250.637 18.38 248.548 21.4239 246.359 23.9275C237.787 33.7307 228.88 43.0627 218.72 51.2576C211.011 57.4761 203.606 63.9397 196.151 70.4547C179.724 84.8109 162.452 98.6366 148.191 115.219C143.975 120.122 140.55 125.772 135.915 130.294C132.471 133.654 129.42 137.384 126.019 140.786C124.387 142.418 122.272 143.971 120.861 145.767C119.963 146.909 119.818 147.276 121.104 146.119C128.83 139.165 137.434 133.175 145.59 126.746C153.525 120.491 160.669 113.21 168.755 107.174C180.744 98.2247 191.721 87.4905 202.609 77.2432C211.094 69.2567 219.297 61.1249 228.969 54.5196C237.125 48.9499 245.952 44.2318 254.734 39.8407C255.005 39.7051 258.253 38.4855 257.071 39.2456C252.787 41.9994 249.772 46.4934 246.315 50.1556C231.807 65.5237 212.471 75.6834 198.311 91.5033C186.745 104.425 173.79 116.155 162.694 129.501C157.041 136.299 150.446 142.399 144.841 149.249C143.951 150.336 142.085 152.76 144.532 150.748C152.323 144.342 161.147 139.591 169.13 133.468C175.369 128.681 181.655 124.056 187.776 119.098C192.974 114.887 198.109 110.693 203.248 106.403C213.723 97.6568 222.585 87.2378 233.267 78.6758C237.948 74.9235 242.758 71.0291 247.681 67.6115C249.592 66.2852 253.343 64.4093 254.646 62.4541C254.907 62.0627 256.371 61.3908 255.924 61.837C251.618 66.1436 248.425 71.8111 244.596 76.5599C238.184 84.5105 231.696 92.1476 223.834 98.7325C216.113 105.199 208.308 111.558 200.559 117.996C194.047 123.405 187.803 129.259 181.604 135.033C178.166 138.236 175.247 141.974 172.436 145.723C171.276 147.269 170.495 148.415 172.568 146.406C179.277 139.9 186.671 134.955 194.388 129.655C200.517 125.445 206.245 120.759 212.196 116.321C219.595 110.803 227.161 105.608 234.281 99.7023C239.205 95.6173 243.757 91.0582 248.585 86.8528C250.477 85.2053 252.124 83.3249 254.316 82.0921C254.528 81.9727 255.769 81.0946 254.955 81.8717C249.898 86.6985 245.483 92.2635 240.761 97.4101C231.969 106.991 222.63 116.226 213.298 125.291C207.294 131.124 201.962 137.117 196.724 143.629C195.436 145.23 192.981 148.087 191.06 148.94C188.449 150.101 192.722 147.653 193.308 147.199C206.601 136.913 220.684 127.61 235.03 118.877C240.374 115.625 245.48 111.562 250.458 107.769C253.002 105.831 255.873 104.194 258.305 102.127C258.628 101.852 254.796 105.37 254.073 106.05C246.037 113.601 239.053 122.235 230.975 129.765C225.391 134.97 220.179 140.077 215.282 145.943C214.938 146.355 210.315 151.196 213.254 149.161C217.626 146.135 221.659 142.6 225.994 139.507C230.713 136.139 235.534 132.918 240.188 129.457C245.17 125.751 250.381 121.759 255.969 118.966C257.36 118.27 261.467 116.115 260.222 117.048C258.709 118.183 257.435 119.679 256.233 121.126C252.373 125.772 248.797 130.539 244.662 134.967C241.449 138.407 238.217 141.785 235.118 145.326C234.085 146.507 232.516 147.755 231.967 149.293C231.67 150.124 232.703 149.497 232.936 149.293C234.518 147.909 236.149 146.694 237.917 145.546C242.514 142.563 247.179 139.603 251.847 136.73C253.264 135.858 257.652 133.68 256.475 134.857C255.12 136.212 253.837 137.591 252.751 139.221C252.039 140.289 251.163 143.387 249.974 143.783\"/>\n\t\t\t\t</svg>}\n\t\t</Wrapper>\n\t);\n}\n\nexport default EmojiKeyboardSwitcher;","import React, { JSX, useState } from 'react';\nimport styled from 'styled-components';\nimport KeyboardBorder from '../borders/KeyboardBorder';\nimport EmojiKeyboardSwitcher from './EmojiKeyboardSwitcher';\nimport Icon, { IconSizeEnum, TIcon } from '../icons/Icon';\nimport { KEYBOARD_HEIGHT } from '../../constants';\nimport { TEmojiListKeys } from '../../store/emoji/emoji.model';\nimport { emojiCodes } from '../../data/emojiCodes';\nimport { setSelectedEmoji } from '../../store/emoji-mapper/emojiMapper.slice';\nimport { TStateSetter } from '../../types';\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux';\nimport { AppDispatch, RootState } from '../../store/store';\nimport { IEmojiState } from '../../store/emoji/emoji.sllice';\n\nconst Keys = styled.div`\n  & > * {\n    width: calc(0.17 * ${KEYBOARD_HEIGHT});\n    height: calc(0.17 * ${KEYBOARD_HEIGHT});\n    padding: 0.3%;\n  }\n`;\ntype TEmojiListToIcon = {\n\t[key in TEmojiListKeys]: TIcon;\n};\n\nconst EmojiListToIcon: TEmojiListToIcon = {\n\tyellowList: 'SMILE_ICON',\n\tsymbolsList: 'HEART_ICON',\n\teatList: 'SMILE_ICON',\n\tgreenList: 'SMILE_ICON',\n\tthingsList: 'SMILE_ICON',\n};\n\nfunction Keyboard(): JSX.Element {\n\tconst [emojiListName, setEmojiListName]: [TEmojiListKeys, TStateSetter<TEmojiListKeys>] = useState<TEmojiListKeys>('yellowList');\n\tconst { emojiList }: IEmojiState = useAppSelector((state: RootState) => state.emojiReducer);\n\tconst dispatch: AppDispatch = useAppDispatch();\n\treturn (\n\t\t<KeyboardBorder height={KEYBOARD_HEIGHT}>\n\t\t\t<>\n\t\t\t\t<div className=\"switchers\">\n\t\t\t\t\t{Object.keys(emojiCodes).map((listName: string) =>\n\t\t\t\t\t\t<EmojiKeyboardSwitcher\n\t\t\t\t\t\t\tisActive={emojiListName === listName}\n\t\t\t\t\t\t\tonClick={() => setEmojiListName(listName as TEmojiListKeys)}>\n\t\t\t\t\t\t\t<Icon icon={EmojiListToIcon[listName as TEmojiListKeys]} size={IconSizeEnum.XS}/>\n\t\t\t\t\t\t</EmojiKeyboardSwitcher>)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<Keys className=\"keys\">\n\t\t\t\t\t{emojiCodes[emojiListName].map((code: string) =>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tonClick={() => dispatch(setSelectedEmoji(code))}\n\t\t\t\t\t\t\tloading=\"eager\"\n\t\t\t\t\t\t\talt={code}\n\t\t\t\t\t\t\tsrc={`data:image/svg+xml;utf8,${encodeURIComponent(emojiList[code])}`}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Keys>\n\t\t\t</>\n\t\t</KeyboardBorder>\n\t);\n}\n\nexport default Keyboard;","import React, { JSX } from 'react';\nimport { TARGET_EMOJI_CONTAINER_SIZE } from '../../constants';\nimport { googleRequestUrl } from '../../store/emoji/emojiUtils';\nimport PenBorder from '../borders/PenBorder';\nimport { useAppSelector } from '../../hooks/redux';\nimport { RootState } from '../../store/store';\nimport { IEmojiMapperState } from '../../store/emoji-mapper/emojiMapper.slice';\n\nfunction TargetEmojiControl(): JSX.Element {\n\tconst { targetEmoji }: IEmojiMapperState = useAppSelector((state: RootState) => state.emojiMapperReducer);\n\n\treturn (\n\t\t<PenBorder size={TARGET_EMOJI_CONTAINER_SIZE}>\n\t\t\t<img\n\t\t\t\tloading=\"eager\"\n\t\t\t\talt=\"target_emoji\"\n\t\t\t\tsrc={googleRequestUrl(targetEmoji)}\n\t\t\t/>\n\t\t</PenBorder>\n\t);\n}\n\nexport default TargetEmojiControl;","import React, { JSX } from 'react';\nimport styled from 'styled-components';\nimport { MERGE_EMOJI_SIZE } from '../../constants';\nimport Icon, { IconSizeEnum } from '../icons/Icon';\nimport { useAppSelector } from '../../hooks/redux';\nimport { RootState } from '../../store/store';\nimport { IEmojiMapperState } from '../../store/emoji-mapper/emojiMapper.slice';\n\n\nconst Wrapper = styled.div`\n  height: ${MERGE_EMOJI_SIZE};\n  width: ${MERGE_EMOJI_SIZE};\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    opacity: 0.7;\n  }\n`;\n\nfunction MergeEmojiControl(): JSX.Element {\n\tconst {\n\t\trightEmoji,\n\t\tleftEmoji,\n\t\tmergedEmojiPath\n\t}: IEmojiMapperState = useAppSelector((state: RootState) => state.emojiMapperReducer);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t{mergedEmojiPath ?\n\t\t\t\t<img\n\t\t\t\t\tloading=\"eager\"\n\t\t\t\t\talt={[leftEmoji, rightEmoji].join('-')}\n\t\t\t\t\tsrc={mergedEmojiPath}\n\t\t\t\t/> : <Icon icon=\"QUESTION_ICON\" size={IconSizeEnum.M}/>\n\t\t\t}\n\t\t</Wrapper>\n\t);\n}\n\nexport default MergeEmojiControl;","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux';\nimport { IEmojiState } from '../../store/emoji/emoji.sllice';\nimport { AppDispatch, RootState } from '../../store/store';\nimport { activateEmojiContainer, IEmojiMapperState } from '../../store/emoji-mapper/emojiMapper.slice';\nimport PenBorder from '../borders/PenBorder';\nimport { SELECTED_EMOJI_CONTAINER_SIZE } from '../../constants';\nimport { SelectedEmojiContainersEnum } from '../../store/emoji-mapper/emojiMapper.model';\n\nexport interface SelectedEmojiContainerProps {\n\ttype: SelectedEmojiContainersEnum;\n\tselectedEmoji: string;\n}\n\nfunction SelectedEmojiControl({ type, selectedEmoji }: SelectedEmojiContainerProps) {\n\tconst { emojiList }: IEmojiState = useAppSelector((state: RootState) => state.emojiReducer);\n\tconst { activeEmojiContainer }: IEmojiMapperState = useAppSelector((state: RootState) => state.emojiMapperReducer);\n\tconst dispatch: AppDispatch = useAppDispatch();\n\n\tconst clickHandler = (): void => {\n\t\tdispatch(activateEmojiContainer(type));\n\t};\n\n\treturn (\n\t\t<PenBorder size={SELECTED_EMOJI_CONTAINER_SIZE} onClick={clickHandler} isActive={type === activeEmojiContainer}>\n\t\t\t{selectedEmoji ? <img\n\t\t\t\tloading=\"eager\"\n\t\t\t\talt={selectedEmoji}\n\t\t\t\tsrc={`data:image/svg+xml;utf8,${encodeURIComponent(emojiList[selectedEmoji])}`}\n\t\t\t/> : null}\n\t\t</PenBorder>);\n}\n\nexport default SelectedEmojiControl;","import React, { JSX } from 'react';\nimport { SelectedEmojiContainersEnum } from '../store/emoji-mapper/emojiMapper.model';\nimport { useAppSelector } from '../hooks/redux';\nimport { RootState } from '../store/store';\nimport { IEmojiMapperState } from '../store/emoji-mapper/emojiMapper.slice';\nimport SelectedEmojiControl from './controls/SelectedEmojiControl';\nimport styled from 'styled-components';\nimport Icon, { IconSizeEnum } from './icons/Icon';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nfunction SelectedEmojiPanel(): JSX.Element {\n\tconst { rightEmoji, leftEmoji }: IEmojiMapperState = useAppSelector((state: RootState) => state.emojiMapperReducer);\n\treturn (\n\t\t<Wrapper>\n\t\t\t<SelectedEmojiControl type={SelectedEmojiContainersEnum.LEFT}\n\t\t\t\t\t\t\t\t  selectedEmoji={leftEmoji}></SelectedEmojiControl>\n\t\t\t<Icon icon=\"PLUS_ICON\" size={IconSizeEnum.M}/>\n\t\t\t<SelectedEmojiControl type={SelectedEmojiContainersEnum.RIGHT}\n\t\t\t\t\t\t\t\t  selectedEmoji={rightEmoji}></SelectedEmojiControl>\n\t\t</Wrapper>\n\t);\n}\n\nexport default SelectedEmojiPanel;","import React, { JSX } from 'react';\nimport DigitProvider from '../digits/DigitProvider';\nimport Icon, { IconSizeEnum } from '../icons/Icon';\nimport { useAppSelector } from '../../hooks/redux';\nimport { RootState } from '../../store/store';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nfunction WinCountControl(): JSX.Element {\n\tconst winCount: number = useAppSelector((state: RootState) => state.emojiMapperReducer.winCount);\n\tconst bestScore: number = useAppSelector((state: RootState) => state.userReducer.bestScore);\n\n\tconst isBestScoreChange = winCount > bestScore;\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t{isBestScoreChange && <Icon icon=\"CROWN_ICON\" size={IconSizeEnum.XS}/>}\n\t\t\t<DigitProvider n={winCount} isBold={isBestScoreChange} size={IconSizeEnum.S}/>\n\t\t</Wrapper>\n\t);\n}\n\nexport default WinCountControl;","import { JSX, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { PageContainer, PageContent } from '../components/style/PageContainer';\nimport { NavigationContainer } from '../components/style/NavigationContainer';\nimport Icon, { IconSizeEnum } from '../components/icons/Icon';\nimport PauseControl from '../components/controls/PauseControl';\nimport TimeControl from '../components/controls/TimeControl';\nimport Keyboard from '../components/keyboard/Keyboard';\nimport TargetEmojiControl from '../components/controls/TargetEmojiControl';\nimport MergeEmojiControl from '../components/controls/MergeEmojiControl';\nimport SelectedEmojiPanel from '../components/SelectedEmojiPanel';\nimport DiamondControl from '../components/controls/DiamondControl';\nimport WinCountControl from '../components/controls/WinCountControl';\nimport { KEYBOARD_HEIGHT } from '../constants';\nimport KeyboardBorder from '../components/borders/KeyboardBorder';\n\nconst Wrapper = styled(PageContainer)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst CountContainer = styled.div`\n  position: absolute;\n  top: calc(${IconSizeEnum.S} + 4vmin);\n`;\n\nconst Content = styled(PageContent)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nfunction GamePage(): JSX.Element {\n\treturn (\n\t\t<Wrapper>\n\t\t\t<NavigationContainer>\n\t\t\t\t<Icon icon=\"TIME_ICON\" size={IconSizeEnum.S}/>\n\t\t\t\t<TimeControl/>\n\t\t\t\t<PauseControl/>\n\t\t\t</NavigationContainer>\n\t\t\t<CountContainer>\n\t\t\t\t<WinCountControl/>\n\t\t\t\t<DiamondControl size={IconSizeEnum.XS}/>\n\t\t\t</CountContainer>\n\t\t\t<Content>\n\t\t\t\t<TargetEmojiControl/>\n\t\t\t\t<MergeEmojiControl/>\n\t\t\t\t<SelectedEmojiPanel/>\n\t\t\t</Content>\n\t\t\t<KeyboardBorder height={KEYBOARD_HEIGHT}>\n\t\t\t\t<Keyboard/>\n\t\t\t</KeyboardBorder>\n\t\t</Wrapper>\n\t);\n}\n\nexport default GamePage;"],"names":["dispatch","useAppDispatch","_jsx","Icon","icon","size","IconSizeEnum","S","onClick","openModal","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","_ref","height","_ref2","width","_ref3","isActive","children","_jsxs","preserveAspectRatio","viewBox","fill","xmlns","strokeDasharray","d","PenBorder","XS","KEYBOARD_HEIGHT","MERGE_EMOJI_SIZE","className","props","_objectWithoutProperties","_excluded","_objectSpread","Keys","EmojiListToIcon","yellowList","symbolsList","eatList","greenList","thingsList","_useState","useState","_useState2","_slicedToArray","emojiListName","setEmojiListName","emojiList","useAppSelector","state","emojiReducer","KeyboardBorder","_Fragment","Object","keys","emojiCodes","map","listName","EmojiKeyboardSwitcher","code","setSelectedEmoji","loading","alt","src","concat","encodeURIComponent","targetEmoji","emojiMapperReducer","googleRequestUrl","_useAppSelector","rightEmoji","leftEmoji","mergedEmojiPath","join","M","type","selectedEmoji","activeEmojiContainer","activateEmojiContainer","SelectedEmojiControl","SelectedEmojiContainersEnum","LEFT","RIGHT","winCount","isBestScoreChange","userReducer","bestScore","DigitProvider","n","isBold","PageContainer","CountContainer","_templateObject2","Content","PageContent","_templateObject3","NavigationContainer","TimeControl","PauseControl","WinCountControl","DiamondControl","TargetEmojiControl","MergeEmojiControl","SelectedEmojiPanel","Keyboard"],"sourceRoot":""}