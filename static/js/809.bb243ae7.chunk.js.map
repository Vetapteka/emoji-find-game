{"version":3,"file":"static/js/809.bb243ae7.chunk.js","mappings":"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","sources":["components/borders/PenBorder.tsx","components/controls/DiamondControl.tsx","components/controls/DiamondScoreControl.tsx","components/controls/TargerEmojiSimpleControl.tsx","components/style/PageContainer.ts","hooks/useBuySmth.ts","components/controls/PauseControl.tsx","components/TimeDash.tsx","components/controls/TimeControl.tsx","components/borders/KeyboardBorder.tsx","components/keyboard/EmojiKeyboardSwitcher.tsx","components/keyboard/Keyboard.tsx","components/controls/UpdateEmojiControl.tsx","components/controls/TargetEmojiControl.tsx","components/controls/MergeEmojiControl.tsx","components/controls/SelectedEmojiControl.tsx","components/SelectedEmojiPanel.tsx","components/controls/PromptControl.tsx","pages/GamePage.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { JSX } from 'react';\nimport { TIME_DASH_WIDTH } from '../../constants';\n\ninterface PenBorderProps {\n\tisActive?: boolean;\n\tonClick?: () => void;\n\tchildren?: JSX.Element | null;\n\tsize?: string;\n\twidth?: string;\n\theight?: string;\n\tstyle?: {};\n\tclassName?: string;\n\tisCenter?: boolean;\n\tisHoverActive?: boolean;\n}\n\ninterface WrapperProps {\n\tsize?: string;\n\twidth?: string;\n\theight?: string;\n\tisCenter?: boolean;\n\tisHoverActive?: boolean;\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  height: ${({ size, height }) => height || size || '100px'};\n  width: ${({ size, width }) => width || size || '100px'};\n  position: relative;\n  \n  & > .border {\n    width: 100%;\n    height: 100%;\n\n    ${({ isHoverActive }) => isHoverActive ? `\n\t\n\t&:hover > :first-child {\n\t stroke-dasharray: 10 10;\n\t}\n\t` : ''}\n  }\n\n  & > * {\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  & > img,\n  & > .image {\n    width: 80%;\n    height: 80%;\n    margin: 10%;\n  }\n\n  ${({ isCenter }) => isCenter ? `\n   & > * {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%);\n  }\n\n  ` : ''}\n  & > .timeDashContainer {\n    width: 100%;\n    height: 100%;\n    box-sizing: border-box;\n    padding: 0 2.5%;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    justify-content: start;\n\n    & > svg {\n      width: ${TIME_DASH_WIDTH};\n      height: 70%;\n      display: inline-block;\n    }\n  }\n`;\n\n\nfunction PenBorder({ isActive, children, ...props }: PenBorderProps) {\n\treturn (\n\t\t<Wrapper {...props}>\n\t\t\t<svg className=\"border\" preserveAspectRatio=\"none\" viewBox=\"0 0 411 392\" fill=\"none\"\n\t\t\t\t xmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t strokeDasharray={isActive ? '10 10' : 'none'}>\n\t\t\t\t<path\n\t\t\t\t\td=\"M403.796 232.787C403.654 241.062 404.948 281.387 403.796 289.571C402.415 299.385 405.468 315.147 403.796 324.916C403.796 363.159 403.796 364.317 367.5 377.57C243.63 383.869 110.689 386.187 102.387 387C81.2968 387 63.9452 384.961 43.7094 377.57C29.8659 372.513 9.13289 360.802 9.13289 343.583C9.13289 317.576 -3.27274 40.6209 14.9024 21.0543C30.6049 4.14964 256.4 10.4884 276.688 6.84824C308.384 6.84824 361.623 -0.768444 390.773 14.9225C403.112 21.5643 409.729 33.6464 403.796 50.2678C403.796 50.2678 403.796 229.611 403.796 241.518\"/>\n\t\t\t</svg>\n\t\t\t{children}\n\t\t</Wrapper>\n\t);\n}\n\nexport default PenBorder;","import styled from 'styled-components';\nimport DigitProvider from '../digits/DigitProvider';\nimport Icon, { IconSizeEnum } from '../icons/Icon';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  z-index: 50;\n`;\n\ninterface DiamondProps {\n\tsize: IconSizeEnum;\n\tcount: number;\n\tonClick?: () => void;\n\tclassName?: string;\n}\n\nfunction DiamondControl({ size, count, ...props }: DiamondProps) {\n\treturn (\n\t\t<Wrapper {...props}>\n\t\t\t<Icon icon=\"DIAMOND_ICON\" size={size}/>\n\t\t\t<DigitProvider style={{ marginLeft: '1vh' }} size={size} n={count} isBold={false}/>\n\t\t</Wrapper>\n\t);\n}\n\nexport default DiamondControl;","import React from 'react';\nimport { useAppSelector } from '../../hooks/redux';\nimport { IconSizeEnum } from '../icons/Icon';\nimport { RootState } from '../../store/store';\nimport { IEmojiMapperState } from '../../store/emoji-mapper/emojiMapper.slice';\nimport DiamondControl from './DiamondControl';\n\ninterface DiamondScoreProps {\n\tsize: IconSizeEnum;\n}\n\nfunction DiamondScoreControl({ size }: DiamondScoreProps) {\n\tconst { diamondsCount }: IEmojiMapperState = useAppSelector((state: RootState) => state.emojiMapperReducer);\n\treturn (\n\t\t<DiamondControl size={size} count={diamondsCount}/>\n\t);\n}\n\nexport default DiamondScoreControl;","import React, { JSX } from 'react';\nimport { googleRequestUrl } from '../../store/emoji-mapper/emojiUtils';\nimport { useAppSelector } from '../../hooks/redux';\nimport { RootState } from '../../store/store';\nimport { IEmojiMapperState } from '../../store/emoji-mapper/emojiMapper.slice';\nimport Icon, { IconSizeEnum } from '../icons/Icon';\n\ninterface TargetEmojiSimpleControlProps {\n\tclassName?: string;\n}\n\nexport default function TargetEmojiSimpleControl({ ...props }: TargetEmojiSimpleControlProps): JSX.Element {\n\tconst { targetEmoji }: IEmojiMapperState = useAppSelector((state: RootState) => state.emojiMapperReducer);\n\n\treturn (\n\t\t<>{targetEmoji && <img\n\t\t\t{...props}\n\t\t\tloading=\"eager\"\n\t\t\talt=\"target_emoji\"\n\t\t\tsrc={googleRequestUrl(targetEmoji.res)}/>\n\t\t}</>\n\t);\n}\n\nexport function TargetPreviousEmojiSimpleControl({ ...props }: TargetEmojiSimpleControlProps): JSX.Element {\n\tconst { previousTargetEmoji }: IEmojiMapperState = useAppSelector((state: RootState) => state.emojiMapperReducer);\n\n\treturn (\n\t\t<>{previousTargetEmoji\n\t\t\t? <img\n\t\t\t\t{...props}\n\t\t\t\tloading=\"eager\"\n\t\t\t\talt=\"target_emoji\"\n\t\t\t\tsrc={googleRequestUrl(previousTargetEmoji.res)}/>\n\t\t\t: <Icon icon=\"QUESTION_ICON\" size={IconSizeEnum.S}/>\n\t\t}</>\n\t);\n}\n\nexport function TargetEmojiPromptControl({ ...props }: TargetEmojiSimpleControlProps): JSX.Element {\n\tconst {\n\t\ttargetEmoji,\n\t\tpreviousTargetEmoji\n\t}: IEmojiMapperState = useAppSelector((state: RootState) => state.emojiMapperReducer);\n\n\treturn (\n\t\t<>{targetEmoji?.res === previousTargetEmoji?.res\n\t\t\t? <Icon icon=\"QUESTION_ICON\" size={IconSizeEnum.S}/>\n\t\t\t: targetEmoji && <img\n\t\t\t\t{...props}\n\t\t\t\tloading=\"eager\"\n\t\t\t\talt=\"target_emoji\"\n\t\t\t\tsrc={googleRequestUrl(targetEmoji.res)}/>\n\t\t}</>\n\t);\n}","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n  min-height: 100vh;\n  width: min(100%, 970px);\n  margin: 0 auto;\n  padding: 2vmin;\n  box-sizing: border-box;\n`\n\nexport const PageContent = styled.div`\n  flex-grow: 1;\n`","import { AppDispatch, RootState } from '../store/store';\nimport { useAppDispatch, useAppSelector } from './redux';\nimport { decreaseDiamonds, showAnswer, updateTargetEmoji } from '../store/emoji-mapper/emojiMapper.slice';\nimport { buyTheme } from '../store/theme/theme.slice';\n\nexport enum ToDoEnum {\n\tUPDATE_EMOJI,\n\tSHOW_ANSWER,\n\tBUY_THEME\n}\n\nexport interface ITodo {\n\taction: ToDoEnum,\n\tpayload?: any\n}\n\ninterface UseBuySmthFuncs {\n\tbuySmth: (price: number, toDo: ITodo) => void,\n\ttoDoSmth: (toDo: ITodo) => void\n}\n\nfunction UseBuySmth(): UseBuySmthFuncs {\n\tconst diamondsCount: number = useAppSelector((state: RootState) => state.emojiMapperReducer.diamondsCount);\n\tconst dispatch: AppDispatch = useAppDispatch();\n\n\tconst buySmth = (price: number, toDo: ITodo): void => {\n\t\tconsole.log('buy')\n\t\tif (diamondsCount >= price) {\n\t\t\tdispatch(decreaseDiamonds(price));\n\t\t\ttoDoSmth(toDo);\n\t\t}\n\t};\n\n\tconst toDoSmth = (toDo: ITodo): void => {\n\t\tswitch (toDo.action) {\n\t\t\tcase ToDoEnum.UPDATE_EMOJI:\n\t\t\t\tdispatch(updateTargetEmoji());\n\t\t\t\tbreak;\n\t\t\tcase ToDoEnum.SHOW_ANSWER:\n\t\t\t\tdispatch(showAnswer());\n\t\t\t\tbreak;\n\t\t\tcase ToDoEnum.BUY_THEME:\n\t\t\t\tdispatch(buyTheme(toDo.payload));\n\t\t\t\tbreak;\n\n\t\t}\n\t};\n\n\treturn { buySmth, toDoSmth };\n}\n\nexport default UseBuySmth;","import React, { JSX } from 'react';\nimport Icon, { IconSizeEnum } from '../icons/Icon';\nimport { AppDispatch } from '../../store/store';\nimport { useAppDispatch } from '../../hooks/redux';\nimport { openModal } from '../../store/pages/pages.slice';\nimport { stopTimer } from '../../store/timer/timer.slice';\n\nfunction PauseControl(): JSX.Element {\n\tconst dispatch: AppDispatch = useAppDispatch();\n\tconst openPauseModalHandler = () => {\n\t\tdispatch(stopTimer());\n\t\tdispatch(openModal({type: 'PAUSE_MODAL'}));\n\t};\n\treturn (\n\t\t<Icon className=\"a-hover-up\" icon=\"PAUSE_ICON\" size={IconSizeEnum.S} onClick={openPauseModalHandler}/>\n\t);\n}\n\nexport default PauseControl;","import React, { JSX } from 'react';\n\nfunction TimeDash(): JSX.Element {\n\treturn (\n\t\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 15 117\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t<path\n\t\t\t\td=\"M9.00195 5.87283C10.5637 -10.5255 5.5166 41.45 5.5166 57.9225C5.5166 67.3688 8.7873 102.054 9.00285 111.499\"/>\n\t\t</svg>\n\t);\n}\n\nexport default TimeDash;","import React, { JSX, useEffect, useState } from 'react';\nimport PenBorder from '../borders/PenBorder';\nimport { IconSizeEnum } from '../icons/Icon';\nimport TimeDash from '../TimeDash';\nimport { TStateSetter } from '../../types';\nimport { useAppSelector } from '../../hooks/redux';\nimport { RootState } from '../../store/store';\nimport { ITimerState } from '../../store/timer/timer.slice';\nimport { nanoid } from 'nanoid';\nimport { GAME_DURATION } from '../../constants';\n\nfunction TimeControl(): JSX.Element {\n\tconst { time }: ITimerState = useAppSelector((state: RootState) => state.timeReducer);\n\tconst [timeDashes, setTimeDashes]: [JSX.Element[], TStateSetter<JSX.Element[]>] = useState<JSX.Element[]>([]);\n\n\tuseEffect((): void => {\n\t\tconst timeDashesCount: number = GAME_DURATION - time;\n\n\t\tif (timeDashes.length >= timeDashesCount) {\n\t\t\tsetTimeDashes([]);\n\t\t} else if (timeDashes.length < timeDashesCount - 1) {\n\t\t\tconst newTimeDash: JSX.Element[] = Array.from({ length: timeDashesCount }, () => (\n\t\t\t\t<TimeDash key={nanoid()}/>\n\t\t\t));\n\t\t\tsetTimeDashes(newTimeDash);\n\t\t} else {\n\t\t\tconst newTimeDash: JSX.Element = <TimeDash key={nanoid()}/>;\n\t\t\tsetTimeDashes((prevDivs: JSX.Element[]) => [...prevDivs, newTimeDash]);\n\t\t}\n\n\t}, [time]);\n\n\treturn (\n\t\t<PenBorder height={IconSizeEnum.XS} width={'100%'}>\n\t\t\t<div className=\"timeDashContainer\">\n\t\t\t\t{timeDashes}\n\t\t\t</div>\n\t\t</PenBorder>\n\t);\n}\n\nexport default TimeControl;","import React, { JSX } from 'react';\nimport styled from 'styled-components';\nimport { KEYBOARD_HEIGHT } from '../../constants';\n\ninterface WrapperProps {\n\theight: string;\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  height: ${({ height }) => height};\n  position: relative;\n  z-index: 1;\n\n  & > .border {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  & > .switchers {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: calc(${KEYBOARD_HEIGHT} * 0.16);\n    width: 100%;\n    display: flex;\n    z-index: 2;\n  }\n\n  & > .keys {\n    position: absolute;\n    top: calc(${KEYBOARD_HEIGHT} * 0.17);\n    width: 96%;\n    height: calc(${KEYBOARD_HEIGHT} * 0.81);\n    box-sizing: border-box;\n    margin: 0 2%;\n    overflow-y: scroll;\n    scroll-behavior: smooth;\n    border-radius: calc(0.04 * ${KEYBOARD_HEIGHT});\n\n    z-index: 2;\n  }\n\n`;\n\ninterface KeyboardBorderProps {\n\theight: string;\n\tchildren: JSX.Element;\n}\n\nfunction KeyboardBorder({ height, children }: KeyboardBorderProps): JSX.Element {\n\treturn (\n\t\t<Wrapper height={height}>\n\t\t\t{children}\n\t\t\t<svg className={'border'} preserveAspectRatio=\"none\" viewBox=\"0 0 1428 1266\" fill=\"none\"\n\t\t\t\t xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M20.6238 5H366.297H662.17H1128.93H1201.08C1250.14 5 1299.33 7.37879 1348.63 7.37879H1382.5C1389.81 7.37879 1405.59 11.3483 1411.5 17.103C1420.01 25.3903 1420 40.1564 1420 52.7386V53.3532C1425.2 81.8769 1413.19 412.214 1413.19 442.114C1413.19 460.152 1416.99 870.895 1416.99 888.72V969.598C1416.99 1022.73 1420.89 1073.45 1420.89 1126.73C1420.89 1153.52 1422.02 1180.74 1422.85 1206.82C1423.17 1216.99 1423.61 1241.04 1416.99 1249.11C1410.26 1257.3 1402.88 1261 1393.55 1261C1360.76 1261 1039.7 1252.46 1007.51 1258.49H815.517C762.742 1258.49 490.317 1253.86 437.58 1253.86C373.984 1253.86 311.635 1251.48 248.143 1251.48H47.5454C31.4347 1251.48 10.1271 1243.5 10.1271 1220.56C10.1271 1191.9 8.9061 1155.58 8.9061 1126.73C8.9061 1095.13 5 1071.71 5 1040.91C5 1016.08 6.95308 284.402 6.95308 260.72V186.977V33.5455C6.95308 20.9644 7.09196 5 20.6238 5Z\"/>\n\t\t\t\t<path\n\t\t\t\t\td=\"M7.04688 192.695C21.7599 192.695 241.636 192.695 256.047 192.695C285.009 192.695 316.657 192.695 345.547 192.695C463.462 192.695 578.508 190.399 696.369 190.399C726.818 190.399 757.764 188.517 788.161 190.399C802.561 191.29 1167.38 194.991 1182.55 194.991C1197.79 194.991 1401.65 201.186 1417.05 201.186\"/>\n\t\t\t\t<path d=\"M289 5L291.5 193\"/>\n\t\t\t\t<path d=\"M574 5L575 189\"/>\n\t\t\t\t<path d=\"M858 7.5V187\"/>\n\t\t\t\t<path d=\"M1136.5 6L1136.5 193\"/>\n\t\t\t</svg>\n\t\t</Wrapper>\n\t);\n}\n\nexport default KeyboardBorder;","import React, { JSX } from 'react';\nimport styled from 'styled-components';\nimport { ACTIVE_ICON_COLOR } from '../../constants';\n\ninterface WrapperProps {\n\t$isActive: boolean;\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  width: 20%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n\n  & > div {\n    padding: 0.3vh;\n    box-sizing: border-box;\n    z-index: 2;\n    ${({ $isActive }) => $isActive ? `stroke: ${ACTIVE_ICON_COLOR}` : ''}\n  }\n\n  & > svg {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n  }\n`;\n\ninterface EmojiSwitcherProps {\n\tonClick?: () => void;\n\tchildren: JSX.Element;\n\tisActive: boolean;\n}\n\nfunction EmojiKeyboardSwitcher({ children, isActive, ...props }: EmojiSwitcherProps): JSX.Element {\n\treturn (\n\t\t<Wrapper $isActive={isActive} {...props}>\n\t\t\t{children}\n\t\t\t{isActive &&\n\t\t\t\t<svg preserveAspectRatio=\"none\" viewBox=\"0 0 542 198\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M5.76839 6.64136C6.39154 22.6096 7.30517 38.7263 7.30517 54.7084C7.30517 71.0007 5 87.1667 5 103.459C5 128.319 5.76839 153.137 5.76839 177.992C5.76839 178.372 5.76839 181.958 5.76839 180.639C5.76839 174.949 5.69378 169.253 5.81108 163.564C6.26891 141.359 8.58787 119.015 10.3787 96.8845C11.9087 77.9789 12.5201 58.6219 16.5259 40.0236C18.3203 31.6924 18.831 23.4113 18.831 14.9229C18.831 -39.3482 18.831 123.465 18.831 177.736C18.831 179.992 19.404 190.816 19.4287 190.628C20.4201 183.068 19.5994 174.918 19.5994 167.32C19.5994 122.805 21.6544 79.3111 28.3078 35.2425C29.5709 26.8768 29.8201 16.5034 32.9609 8.47696C34.792 3.79745 33.4722 18.5216 33.3878 23.5459C33.0763 42.0792 32.7944 60.6439 32.1925 79.1689C31.4545 101.882 29.5286 124.559 29.7166 147.299C29.8059 158.108 31.2514 190.45 31.851 179.657C32.4136 169.53 31.8937 159.231 31.8937 149.092C31.8937 127.494 31.393 105.809 32.9182 84.2488C34.4152 63.087 37.5764 42.0501 41.4132 21.1981C42.2121 16.8562 41.9069 9.54527 44.1879 5.61684C44.5447 5.00243 45.2278 6.70827 45.3405 7.40975C46.128 12.31 46.1879 17.4072 46.3223 22.3507C47.5349 66.9476 42.4295 111.476 43.5903 156.051C43.7606 162.592 43.2845 171.923 46.7492 177.907C48.9109 181.641 47.2744 169.286 47.2188 164.972C46.6565 121.393 46.3314 77.8593 55.7991 35.0291C57.7765 26.0839 59.8443 17.0053 62.6293 8.26351C65.0041 0.80925 63.8892 16.4537 63.8245 17.4842C62.8111 33.6352 62.7923 49.7214 62.2878 65.8928C61.3949 94.5109 58.8072 123.021 57.4213 151.611C56.9334 161.675 56.5675 171.757 56.5675 181.834C56.5675 183.912 56.5767 185.991 56.6529 188.067C56.7025 189.418 55.9753 191.629 57.2505 192.08C58.2582 192.435 58.7865 170.37 58.7873 170.052C58.9036 124.122 57.8685 78.4696 67.1542 33.2789C68.486 26.7978 69.7 20.3169 70.6547 13.7703C71.8134 5.82474 71.0071 21.5796 70.9962 21.9665C69.686 68.4783 65.7016 114.745 66.5566 161.344C66.6637 167.179 66.7292 173.196 68.008 178.932C68.2704 180.108 69.3489 183.147 69.8436 182.048C70.9555 179.577 70.1952 174.325 70.1424 172.016C69.9402 163.178 69.5973 154.35 69.6728 145.507C70.0127 105.739 75.2885 65.9656 84.7845 27.3879C84.8199 27.2443 85.7722 7.88464 86.1079 10.6541C87.3172 20.6313 86.5026 43.9389 86.1079 53.94C84.5231 94.0873 78.656 135.344 82.6074 175.516C83.5128 184.721 83.87 157.057 84.1442 147.812C84.6035 132.325 84.7922 116.796 85.681 101.324C86.6432 84.5728 89.3128 67.9328 92.4257 51.4641C94.163 42.2736 96.4038 33.0747 97.0361 23.7167C97.1723 21.7009 97.2068 9.42973 97.2068 7.40975C97.2068 5.44608 97.2068 21.5823 97.2068 23.5459C97.2068 61.3185 95.2151 99.0335 94.9443 136.798C94.8113 155.352 94.6951 165.177 97.0912 183.627C97.464 186.498 97.0912 183.627 96.6092 193.616C96.9926 188.938 97.0994 184.219 97.1641 179.529C97.7627 136.135 98.1138 93.4718 104.549 50.4396C106.042 40.4582 110.156 23.7871 110.355 13.6422C110.488 6.84188 108.749 33.6489 108.733 40.4505C108.687 59.6272 108.017 78.7531 107.153 97.909C105.961 124.372 103.246 151.643 105.403 178.12C105.899 184.207 108.832 189.801 109.8 180.554C111.717 162.233 110.124 143.273 110.355 124.888C110.719 95.9674 113.218 67.182 119.319 38.8711C121.128 30.4801 123.87 22.2634 125.552 13.8557C126.517 9.02789 125.66 23.7029 125.595 28.6259C125.346 47.4092 123.095 66.1567 121.838 84.8891C120.406 106.222 119.158 127.58 118.893 148.964C118.742 161.095 118.635 173.317 119.618 185.42M124.527 183.798C125.401 178.654 124.738 188.949 124.527 183.798ZM124.527 183.798C123.669 162.858 122.949 142.094 124.015 121.132C125.21 97.6267 127.27 74.2405 131.784 51.1226C133.661 41.5099 133.571 18.9856 135.754 9.45879C136.926 4.34555 139.468 33.0703 139.468 38.3161C139.468 58.1164 137.834 77.8105 136.736 97.5675C135.761 115.125 135.245 132.789 135.754 150.373C136.057 160.814 136.141 173.984 140.962 183.627C142.21 186.122 142.787 183.793 142.969 182.176C143.649 176.132 143.333 169.836 143.268 163.777C143.002 139.118 141.925 114.469 143.865 89.8409C145.236 72.4409 148.471 55.2939 152.787 38.4015C153.648 35.0304 151.247 3.93717 151.464 7.40975C152.101 17.6111 155.629 49.4049 155.178 59.5749C154.107 83.7165 152.249 107.82 151.464 131.974C150.901 149.299 150.913 166.665 153.897 183.798C154.668 188.222 163.801 195.145 163.801 183.158M163.801 183.158C163.801 164.508 156.307 151.321 156.373 132.657C156.456 109.17 158.058 85.5949 161.154 62.307C162.505 52.1431 160.662 19.158 164.099 9.45879C165.765 4.76065 169.325 31.2554 169.265 33.2789C169.123 38.0723 168.638 42.8886 168.24 47.6649C166.5 68.5512 165.19 89.4423 164.099 110.374C162.846 134.417 161.017 159.163 163.801 183.158ZM163.801 183.158C164.279 187.283 167.466 187.288 167.899 183.158C169.341 169.392 167.899 166.68 167.899 152.892C167.899 123.824 168.226 94.9865 171.57 66.0635C173.481 49.5352 175.316 30.9859 182.498 15.6913C183.378 13.8182 184.431 9.46737 186.127 10.6541C186.883 11.1834 186.191 16.3484 186.169 16.7158C185.336 30.969 183.421 45.1667 182.327 59.4042C180.213 86.9439 178.564 114.502 178.656 142.134C178.696 154.122 178.979 166.112 180.321 178.035M185.273 181.834C185.787 175.475 184.803 179.059 184.803 172.699C184.803 147.044 184.646 121.381 185.273 95.7319C185.845 72.3364 188.398 50.2917 194.792 27.7294C196.81 20.6115 198.906 13.1053 202.306 6.4706C202.731 5.64011 203.979 12.3241 205.294 12.0207C206.01 11.8553 204.769 21.8913 204.696 22.6068C201.94 49.5534 198.334 76.4099 196.158 103.416C194.232 127.326 192.941 152.18 196.756 175.986C196.915 176.978 201.151 193.784 201.623 184.481C203.579 145.836 199.916 107.237 205.294 68.7102C207.932 49.8046 211.139 30.191 218.271 12.3616C223.319 -0.257838 222.161 14.2744 221.345 19.1917C217.9 39.9275 214.825 60.4741 212.892 81.4313C210.312 109.401 207.493 137.833 209.136 165.954C209.468 171.648 209.455 179.516 212.081 184.865C213.652 188.064 221.141 182.787 221.345 181.834C224.659 166.336 217.538 149.878 218.186 134.109C219.063 112.754 220.412 91.3837 223.009 70.1616C225.076 53.2771 227.032 35.4249 232.444 19.1917C233.087 17.2599 234.153 11.9666 235.176 13.7276C236.191 15.4771 234.835 20.7547 234.621 22.2653C232.452 37.5828 230.662 52.8671 229.327 68.2833C227.362 90.9829 225.695 113.716 225.101 136.499C224.634 154.438 227.338 163.579 233.212 180.81M233.212 180.81C236.622 190.813 233.208 182.093 233.212 180.81ZM233.212 180.81C233.275 159.871 232.83 138.903 233.553 117.973C234.259 97.5458 235.735 77.1888 239.359 57.0563C240.658 49.8375 242.127 42.6425 244.14 35.5841C244.948 32.75 246.409 11.9094 248.452 9.45879C249.362 8.36581 248.589 27.9289 248.58 29.3516C248.548 34.0952 248.194 38.8053 247.726 43.5241C245.448 66.4625 242.996 89.3911 241.835 112.423C240.613 136.65 239.055 162.359 242.902 186.445C243.046 187.345 247.04 195.479 247.726 186.445C249.086 168.534 248.497 158.68 248.622 140.725C248.812 113.57 249.943 86.1916 254.727 59.4042C256.654 48.6141 259.996 38.1689 263.777 27.9002C265.069 24.3914 270.479 2.81319 270.095 14.4533C269.423 34.8063 265.908 63.7698 264.289 84.078C262.284 109.23 259.985 134.825 261.557 160.063C262.11 168.943 262.816 178.386 265.442 186.957C265.916 188.507 268.32 191.765 268.985 190.287C270.585 186.731 270.011 180.873 270.095 177.267C270.336 166.838 275.885 187.697 276.071 177.267C276.548 150.448 272.699 92.6093 276.071 65.9782C278.372 47.8048 281.216 29.2829 287.597 12.0201C287.988 10.963 295.269 7.22817 296.006 14.9229C297.394 29.398 291.183 35.4214 289.689 49.7566C286.918 76.3373 285.005 102.988 284.438 129.712C284.215 140.208 283.836 150.962 285.036 161.429C285.522 165.67 286.357 170.635 288.878 174.236C290.494 176.545 291.68 175.704 292.036 173.211C292.996 166.493 292.586 159.298 292.805 152.55C293.591 128.279 294.032 103.886 296.006 79.6811C297.699 58.9324 299.681 37.4693 304.971 17.2708C305.024 17.0682 306.624 9.0049 307.575 8.43427C307.868 8.25856 307.6 9.11821 307.575 9.45879C307.415 11.6231 306.689 18.0787 306.55 19.3625C301.835 63.1899 297.045 107.123 297.927 151.269C297.95 152.42 299.702 185.428 302.794 184.139C304.454 183.448 304.277 172.932 304.288 172.742C304.735 164.787 305.096 156.83 305.611 148.879C308.3 107.412 307.85 65.4697 316.54 24.6558C316.728 23.7725 318.13 13.9408 320.125 13.2154C320.536 13.0662 320.523 14.0178 320.552 14.4533C320.703 16.6714 320.145 22.3274 319.997 24.0155C318.372 42.5667 317.228 61.1281 316.198 79.7238C315.096 99.6268 313.778 119.628 313.893 139.573C313.935 146.899 314.28 154.246 315.558 161.472C315.85 163.123 316.744 170.192 318.93 171.589C320.588 172.648 319.958 167.751 319.997 165.784C320.124 159.469 320.04 153.145 320.04 146.83C320.04 124.48 319.941 102.136 321.15 79.8092C322.217 60.0978 323.304 40.0876 326.358 20.5578C326.695 18.4028 329.896 0.987834 328.919 12.1908C324.579 61.9805 321.848 112.022 323.455 162.027C323.6 166.545 324.054 176.356 324.48 181.237C324.648 183.171 324.607 188.776 326.956 190.244C329.913 192.092 329.295 172.651 329.303 171.845C329.792 127.167 329.059 53.8223 341.555 10.6541C341.707 10.1302 347.617 26.5881 347.617 31.6567C347.617 49.9034 344.958 68.0979 343.134 86.2124C340.359 113.779 338.228 141.947 339.079 169.668C339.263 175.646 339.59 182.074 341.555 187.811C341.889 188.787 343.493 192.507 344.116 189.219C346.457 176.878 344.624 162.509 344.458 150.074C344.126 125.212 342.84 100.181 345.055 75.3696C346.891 54.8127 349.556 32.8975 355.898 13.13C356.161 12.3119 362.643 36.5656 362.558 14.0692M362.558 14.0692C363.607 32.2118 362.212 19.7893 362.327 20.3016C362.836 22.5852 362.605 12.3708 362.558 14.0692ZM362.558 14.0692C361.737 43.2058 357.128 72.3304 355.13 101.409C353.452 125.823 350.637 152.284 355.557 176.541C357.379 185.529 360.389 183.732 361.362 176.199C362.437 167.882 362.477 159.323 362.728 150.971C363.431 127.589 363.835 104.186 365.29 80.8337C366.687 58.3958 369.372 36.203 374.382 14.2826C376.822 3.60933 376.152 15.985 376.004 19.3625C375.053 41.0775 371.826 62.6779 370.455 84.3768C368.784 110.826 366.151 138.949 369.729 165.357C369.733 165.385 372.893 183.106 375.791 177.651C377.864 173.748 377.485 167.602 377.669 163.478C378.152 152.67 378.556 141.85 378.865 131.035C379.58 105.994 379.496 80.9958 382.45 56.0745C383.632 46.1048 385.202 36.1537 387.231 26.3207C388.096 22.133 388.873 16.1685 391.159 12.2762C391.82 11.1497 392.074 12.6684 392.098 12.9592C392.644 19.5764 391.777 26.7737 391.372 33.3216C389.771 59.2469 386.751 85.0669 385.481 111.014C384.439 132.308 383.071 154.84 387.317 175.901C387.845 178.519 388.522 183.563 390.39 185.847C391.928 187.726 391.719 181.14 391.884 178.718C393.154 160.096 394.184 141.444 394.958 122.796C395.93 99.397 396.483 75.5711 401.361 52.574C403.154 44.1247 405.502 21.9665 409.259 27.7294C409.893 26.4124 404.625 11.8235 405.502 10.6541C406.573 9.22584 417.077 12.8026 417.626 14.9229C420.85 27.3894 412.91 52.7378 411.863 65.2098C409.99 87.5163 408.37 109.885 407.039 132.23C406.21 146.139 405.502 160.085 405.502 174.022C405.502 181.164 405.331 179.443 407.039 186.445C428.298 185.676 417.885 188.885 418.049 186.445C419.829 160.01 421.292 133.552 423.257 107.13C425.166 81.4718 421.374 54.1604 428.298 29.2662C430.402 21.701 432.863 13.7406 436.494 6.72673C437.254 5.25757 439.93 8.61185 440.464 12.0201C441.187 16.6437 439.464 15.7288 439.012 20.3016C438.047 30.0763 436.776 39.8203 435.725 49.5858C431.762 86.4222 428.491 124.038 431.03 161.088C431.372 166.089 432.363 177.333 435.042 183.03C435.353 183.69 436.158 184.348 436.878 184.225C438.817 183.893 438.423 180.546 438.628 178.59C440.84 157.482 439.468 135.797 440.464 114.6C441.737 87.4873 444.445 60.3813 450.239 33.8338C450.583 32.2586 456.62 -3.26259 456.387 10.6541C455.617 56.4337 447.382 113.827 450.111 159.679C450.215 161.417 447.366 192.048 450.239 181.237C454.55 165.02 459.74 137.626 460.655 121.046C461.748 101.262 462.522 81.3742 465.778 61.7947C467.063 54.0707 468.639 46.3029 470.858 38.7857C471.422 36.8742 473.79 9.13823 475.084 10.6541C477.226 13.1627 475.084 45.1474 475.084 47.4087C475.084 58.0291 474.253 68.6224 473.547 79.2115C471.972 102.845 470.1 126.625 470.218 150.33C470.239 154.564 470.42 160.942 470.986 165.271C460.655 177.267 472.537 188.345 473.547 186.445C476.047 181.746 476.257 158.601 476.621 153.575C477.27 144.607 477.539 135.615 478.03 126.638C479.636 97.223 483.543 69.1119 491.049 40.5359C492.643 34.4714 489.124 18.9264 491.049 12.9592C492.1 9.70325 500.256 10.4417 501.465 13.6422C503.756 19.7053 501.636 30.941 501.124 36.9501C497.338 81.3535 488.73 126.349 492.33 171.077C492.564 173.98 492.361 180.958 494.849 179.444C494.849 188.067 497.157 172.022 497.367 170.223C499.557 151.502 500.013 132.498 501.38 113.704C503.322 87.0003 506.182 60.3342 511.369 34.0473C512.787 26.8617 514.335 19.6622 516.193 12.575C516.679 10.7205 517.174 5.48261 518.114 7.15362C518.865 8.48947 517.477 15.8964 517.431 16.3743C516.536 25.6482 515.679 34.9253 514.87 44.2071C512.343 73.1614 510.245 102.127 510.003 131.206C509.887 145.097 510.403 159.152 514.699 172.486C518.459 184.155 518.22 164.727 518.242 162.71C518.699 121.543 518.091 80.4789 520.163 39.3406C520.262 37.3816 520.59 22.1364 520.59 32.8093C520.59 48.604 520.59 64.3987 520.59 80.1934C520.59 105.351 519.783 130.677 521.486 155.794C521.917 162.143 522.081 169.603 524.432 175.687C524.932 176.982 526.404 178.963 526.993 176.498C529.348 166.649 527.467 154.529 527.505 144.525C527.657 105.229 528.357 65.9057 529.213 26.6195C529.236 25.542 529.932 4.96342 529.213 16.3743C528.33 30.3853 529.07 44.6087 529.042 58.6358C528.962 99.514 526.48 139.865 532.884 180.383M501.124 184.481C501.153 180.912 535.186 188.756 536.726 185.676\"/>\n\t\t\t\t</svg>}\n\t\t</Wrapper>\n\t);\n}\n\nexport default EmojiKeyboardSwitcher;","import React, { JSX, useState } from 'react';\nimport styled from 'styled-components';\nimport KeyboardBorder from '../borders/KeyboardBorder';\nimport EmojiKeyboardSwitcher from './EmojiKeyboardSwitcher';\nimport Icon, { IconSizeEnum, TIcon } from '../icons/Icon';\nimport { KEY_EMOJI_SIZE, KEYBOARD_HEIGHT } from '../../constants';\nimport { TEmojiListKeys } from '../../store/emoji-mapper/emojiMapper.model';\nimport { emojiCodes } from '../../data/emojiCodes';\nimport { setSelectedEmoji } from '../../store/emoji-mapper/emojiMapper.slice';\nimport { TStateSetter } from '../../types';\nimport { useAppDispatch } from '../../hooks/redux';\nimport { AppDispatch } from '../../store/store';\nimport { nanoid } from 'nanoid';\nimport { Howl } from 'howler';\n// @ts-ignore\nimport smile_choose_sound from '../../assets/sounds/smile_choose_sound.mp3';\n\nconst Keys = styled.div`\n  & > * {\n    width: ${KEY_EMOJI_SIZE};\n    height: ${KEY_EMOJI_SIZE};\n    margin: 0.3%;\n    display: inline-block;\n  }\n`;\n\ntype TEmojiListToIcon = {\n\t[key in TEmojiListKeys]: TIcon;\n};\n\nconst EmojiListToIcon: TEmojiListToIcon = {\n\tyellowList: 'SMILE_ICON',\n\tsymbolsList: 'HEART_ICON',\n\teatList: 'CAKE_ICON',\n\tgreenList: 'GREEN_ICON',\n\tthingsList: 'BALL_ICON',\n};\n\nfunction Keyboard(): JSX.Element {\n\tconst [emojiListName, setEmojiListName]: [TEmojiListKeys, TStateSetter<TEmojiListKeys>] = useState<TEmojiListKeys>('yellowList');\n\tconst dispatch: AppDispatch = useAppDispatch();\n\n\tconst sound: Howl = new Howl({\n\t\tsrc: [smile_choose_sound],\n\t});\n\n\tconst onKeyClick = (code: string) => {\n\t\treturn (): void => {\n\t\t\tsound.play();\n\t\t\tdispatch(setSelectedEmoji(code));\n\t\t};\n\t};\n\n\treturn (\n\t\t<KeyboardBorder height={KEYBOARD_HEIGHT}>\n\t\t\t<>\n\t\t\t\t<div className=\"switchers\">\n\t\t\t\t\t{Object.keys(emojiCodes).map((listName: string) =>\n\t\t\t\t\t\t<EmojiKeyboardSwitcher key={nanoid()}\n\t\t\t\t\t\t\t\t\t\t\t   isActive={emojiListName === listName}\n\t\t\t\t\t\t\t\t\t\t\t   onClick={() => setEmojiListName(listName as TEmojiListKeys)}>\n\t\t\t\t\t\t\t<Icon className=\"a-hover-up\" icon={EmojiListToIcon[listName as TEmojiListKeys]}\n\t\t\t\t\t\t\t\t  size={IconSizeEnum.S}/>\n\t\t\t\t\t\t</EmojiKeyboardSwitcher>)\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<Keys className=\"keys\">\n\t\t\t\t\t{emojiCodes[emojiListName].map((code: string) =>\n\t\t\t\t\t\t<div className={`u-${code}`} key={nanoid()} onClick={onKeyClick(code)}></div>\n\t\t\t\t\t)}\n\t\t\t\t</Keys>\n\t\t\t</>\n\t\t</KeyboardBorder>\n\t);\n}\n\nexport default Keyboard;","import React, { JSX } from 'react';\nimport Icon, { IconSizeEnum } from '../icons/Icon';\nimport { AppDispatch } from '../../store/store';\nimport { useAppDispatch } from '../../hooks/redux';\nimport { openModal } from '../../store/pages/pages.slice';\nimport { stopTimer } from '../../store/timer/timer.slice';\nimport { ToDoEnum } from '../../hooks/useBuySmth';\nimport { UPDATE_EMOJI_PRICE } from '../../constants';\n\nfunction UpdateEmojiControl(props: any): JSX.Element {\n\tconst dispatch: AppDispatch = useAppDispatch();\n\tconst openUpdateEmojiModalHandler = (): void => {\n\t\tdispatch(openModal({ type: 'PROMPT_MODAL', props: { toDo: {action: ToDoEnum.UPDATE_EMOJI}, price: UPDATE_EMOJI_PRICE } }));\n\t\tdispatch(stopTimer());\n\t};\n\n\treturn (\n\t\t<Icon className=\"a-hover-up-down\" style={{ zIndex: '100' }} {...props} icon={'UPDATE_ICON'} size={IconSizeEnum.XS}\n\t\t\t  onClick={openUpdateEmojiModalHandler}/>\n\t);\n}\n\nexport default UpdateEmojiControl;","import React, { JSX } from 'react';\nimport { TARGET_EMOJI_CONTAINER_SIZE } from '../../constants';\nimport PenBorder from '../borders/PenBorder';\nimport styled from 'styled-components';\nimport UpdateEmojiControl from './UpdateEmojiControl';\nimport TargetEmojiSimpleControl from './TargerEmojiSimpleControl';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  & > .update {\n    position: absolute;\n    top: -0.7vh;\n    right: -1.5vh;\n  }\n`;\n\nfunction TargetEmojiControl({...props}): JSX.Element {\n\treturn (\n\t\t<Wrapper {...props}>\n\t\t\t<UpdateEmojiControl className=\"update a-hover-up-down\"/>\n\t\t\t<PenBorder size={TARGET_EMOJI_CONTAINER_SIZE}>\n\t\t\t\t<TargetEmojiSimpleControl/>\n\t\t\t</PenBorder>\n\t\t</Wrapper>\n\t);\n}\n\nexport default TargetEmojiControl;","import React, { JSX } from 'react';\nimport styled from 'styled-components';\nimport { MERGE_EMOJI_SIZE } from '../../constants';\nimport Icon, { IconSizeEnum } from '../icons/Icon';\nimport { useAppSelector } from '../../hooks/redux';\nimport { RootState } from '../../store/store';\nimport { IEmojiMapperState } from '../../store/emoji-mapper/emojiMapper.slice';\n\n\nconst Wrapper = styled.div`\n  height: ${MERGE_EMOJI_SIZE};\n  width: ${MERGE_EMOJI_SIZE};\n\n  & > img {\n    width: 100%;\n    height: 100%;\n    opacity: 0.7;\n  }\n`;\n\nfunction MergeEmojiControl(): JSX.Element {\n\tconst {\n\t\trightEmoji,\n\t\tleftEmoji,\n\t\tmergedEmojiPath\n\t}: IEmojiMapperState = useAppSelector((state: RootState) => state.emojiMapperReducer);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t{mergedEmojiPath ?\n\t\t\t\t<img\n\t\t\t\t\tloading=\"eager\"\n\t\t\t\t\talt={[leftEmoji, rightEmoji].join('-')}\n\t\t\t\t\tsrc={mergedEmojiPath}\n\t\t\t\t/> : <Icon icon=\"QUESTION_ICON\" size={IconSizeEnum.M}/>\n\t\t\t}\n\t\t</Wrapper>\n\t);\n}\n\nexport default MergeEmojiControl;","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux';\nimport { AppDispatch, RootState } from '../../store/store';\nimport { activateEmojiContainer, IEmojiMapperState } from '../../store/emoji-mapper/emojiMapper.slice';\nimport PenBorder from '../borders/PenBorder';\nimport { KEY_EMOJI_SIZE, SELECTED_EMOJI_CONTAINER_SIZE } from '../../constants';\nimport { SelectedEmojiContainersEnum } from '../../store/emoji-mapper/emojiMapper.model';\nimport styled from 'styled-components';\n\ninterface WrapperProps {\n\tisLeft: boolean;\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  position: relative;\n\n  & > .prompt {\n    position: absolute;\n    width: ${KEY_EMOJI_SIZE};\n    height: ${KEY_EMOJI_SIZE};\n    top: -3vh;\n\n    ${({ isLeft }) => isLeft ? 'right: -3vh;' : 'left: -3vh;'}\n\n    z-index: 50;\n    opacity: 0.8;\n  }\n`;\n\nexport interface SelectedEmojiContainerProps {\n\ttype: SelectedEmojiContainersEnum;\n\tprompt: string;\n\tselectedEmoji: string;\n}\n\nfunction SelectedEmojiControl({ type, prompt, selectedEmoji }: SelectedEmojiContainerProps) {\n\tconst { activeEmojiContainer }: IEmojiMapperState = useAppSelector((state: RootState) => state.emojiMapperReducer);\n\tconst dispatch: AppDispatch = useAppDispatch();\n\n\tconst clickHandler = (): void => {\n\t\tdispatch(activateEmojiContainer(type));\n\t};\n\n\treturn (\n\t\t<Wrapper isLeft={type === SelectedEmojiContainersEnum.LEFT}>\n\t\t\t<div className={`u-${prompt} prompt`}></div>\n\t\t\t<PenBorder size={SELECTED_EMOJI_CONTAINER_SIZE} onClick={clickHandler}\n\t\t\t\t\t   isActive={type === activeEmojiContainer}>\n\t\t\t\t{selectedEmoji ? <div className={`u-${selectedEmoji} image`}></div> : null}\n\t\t\t</PenBorder>\n\t\t</Wrapper>);\n}\n\nexport default SelectedEmojiControl;","import React, { JSX } from 'react';\nimport { SelectedEmojiContainersEnum } from '../store/emoji-mapper/emojiMapper.model';\nimport { useAppSelector } from '../hooks/redux';\nimport { RootState } from '../store/store';\nimport { IEmojiMapperState } from '../store/emoji-mapper/emojiMapper.slice';\nimport SelectedEmojiControl from './controls/SelectedEmojiControl';\nimport styled from 'styled-components';\nimport Icon, { IconSizeEnum } from './icons/Icon';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nfunction SelectedEmojiPanel(): JSX.Element {\n\tconst {\n\t\trightEmoji,\n\t\tleftEmoji,\n\t\tanswer2,\n\t\tanswer1\n\t}: IEmojiMapperState = useAppSelector((state: RootState) => state.emojiMapperReducer);\n\treturn (\n\t\t<Wrapper>\n\t\t\t<SelectedEmojiControl prompt={answer1}\n\t\t\t\t\t\t\t\t  type={SelectedEmojiContainersEnum.LEFT}\n\t\t\t\t\t\t\t\t  selectedEmoji={leftEmoji}></SelectedEmojiControl>\n\t\t\t<Icon icon=\"PLUS_ICON\" size={IconSizeEnum.M}/>\n\t\t\t<SelectedEmojiControl prompt={answer2}\n\t\t\t\t\t\t\t\t  type={SelectedEmojiContainersEnum.RIGHT}\n\t\t\t\t\t\t\t\t  selectedEmoji={rightEmoji}></SelectedEmojiControl>\n\t\t</Wrapper>\n\t);\n}\n\nexport default SelectedEmojiPanel;","import React, { JSX } from 'react';\nimport Icon, { IconSizeEnum } from '../icons/Icon';\nimport { AppDispatch } from '../../store/store';\nimport { useAppDispatch } from '../../hooks/redux';\nimport { openModal } from '../../store/pages/pages.slice';\nimport { ToDoEnum } from '../../hooks/useBuySmth';\nimport { SHOW_ANSWER_PRICE } from '../../constants';\nimport { stopTimer } from '../../store/timer/timer.slice';\n\n\nfunction PromptControl(): JSX.Element {\n\tconst dispatch: AppDispatch = useAppDispatch();\n\tconst openPromptModalHandler = (): void => {\n\t\tdispatch(openModal({ type: 'PROMPT_MODAL', props: { toDo: {action: ToDoEnum.SHOW_ANSWER}, price: SHOW_ANSWER_PRICE } }));\n\t\tdispatch(stopTimer());\n\t};\n\n\treturn (\n\t\t<Icon className=\"update a-hover-up-down\" onClick={openPromptModalHandler} icon=\"PROMPT_ICON\" size={IconSizeEnum.S}/>\n\t);\n}\n\nexport default PromptControl;","import { JSX } from 'react';\nimport styled from 'styled-components';\nimport { PageContainer, PageContent } from '../components/style/PageContainer';\nimport { NavigationContainer } from '../components/style/NavigationContainer';\nimport Icon, { IconSizeEnum } from '../components/icons/Icon';\nimport PauseControl from '../components/controls/PauseControl';\nimport TimeControl from '../components/controls/TimeControl';\nimport Keyboard from '../components/keyboard/Keyboard';\nimport TargetEmojiControl from '../components/controls/TargetEmojiControl';\nimport MergeEmojiControl from '../components/controls/MergeEmojiControl';\nimport SelectedEmojiPanel from '../components/SelectedEmojiPanel';\nimport DiamondScoreControl from '../components/controls/DiamondScoreControl';\nimport WinCountControl from '../components/controls/WinCountControl';\nimport { KEYBOARD_HEIGHT } from '../constants';\nimport KeyboardBorder from '../components/borders/KeyboardBorder';\nimport PromptControl from '../components/controls/PromptControl';\n\nconst Wrapper = styled(PageContainer)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n\n`;\n\nconst CountContainer = styled.div`\n  position: absolute;\n  top: calc(${IconSizeEnum.S} + 4vmin);\n  left: 2vmin;\n`;\n\nconst PromptContainer = styled.div`\n  position: absolute;\n  top: calc(${IconSizeEnum.S} + 4vmin);\n  right: 2vmin;\n`;\n\nconst Content = styled(PageContent)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nfunction GamePage(): JSX.Element {\n\treturn (\n\t\t<Wrapper className=\"a-appear\">\n\t\t\t<NavigationContainer>\n\t\t\t\t<Icon icon=\"TIME_ICON\" size={IconSizeEnum.S}/>\n\t\t\t\t<TimeControl/>\n\t\t\t\t<PauseControl/>\n\t\t\t</NavigationContainer>\n\t\t\t<CountContainer>\n\t\t\t\t<WinCountControl/>\n\t\t\t\t<DiamondScoreControl size={IconSizeEnum.XS}/>\n\t\t\t</CountContainer>\n\t\t\t<PromptContainer>\n\t\t\t\t<PromptControl/>\n\t\t\t</PromptContainer>\n\t\t\t<Content>\n\t\t\t\t<TargetEmojiControl className=\"target_emoji\"/>\n\t\t\t\t<MergeEmojiControl/>\n\t\t\t\t<SelectedEmojiPanel/>\n\t\t\t</Content>\n\t\t\t<KeyboardBorder height={KEYBOARD_HEIGHT}>\n\t\t\t\t<Keyboard/>\n\t\t\t</KeyboardBorder>\n\t\t</Wrapper>\n\t);\n}\n\nexport default GamePage;"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","_ref","size","height","_ref2","width","_ref3","isHoverActive","_ref4","isCenter","TIME_DASH_WIDTH","_ref5","isActive","children","props","_objectWithoutProperties","_excluded","_jsxs","_objectSpread","_jsx","className","preserveAspectRatio","viewBox","fill","xmlns","strokeDasharray","d","count","Icon","icon","DigitProvider","style","marginLeft","n","isBold","diamondsCount","useAppSelector","state","emojiMapperReducer","DiamondControl","TargetEmojiSimpleControl","Object","assign","_objectDestructuringEmpty","targetEmoji","_Fragment","loading","alt","src","googleRequestUrl","res","TargetPreviousEmojiSimpleControl","previousTargetEmoji","IconSizeEnum","S","TargetEmojiPromptControl","_useAppSelector3","PageContainer","PageContent","_templateObject2","ToDoEnum","dispatch","useAppDispatch","toDoSmth","toDo","action","UPDATE_EMOJI","updateTargetEmoji","SHOW_ANSWER","showAnswer","BUY_THEME","buyTheme","payload","buySmth","price","console","log","decreaseDiamonds","onClick","stopTimer","openModal","type","time","timeReducer","_useState","useState","_useState2","_slicedToArray","timeDashes","setTimeDashes","useEffect","timeDashesCount","GAME_DURATION","length","newTimeDash","Array","from","TimeDash","nanoid","prevDivs","concat","_toConsumableArray","PenBorder","XS","KEYBOARD_HEIGHT","$isActive","ACTIVE_ICON_COLOR","Keys","KEY_EMOJI_SIZE","EmojiListToIcon","yellowList","symbolsList","eatList","greenList","thingsList","emojiListName","setEmojiListName","sound","Howl","smile_choose_sound","onKeyClick","code","play","setSelectedEmoji","KeyboardBorder","keys","emojiCodes","map","listName","EmojiKeyboardSwitcher","zIndex","UPDATE_EMOJI_PRICE","UpdateEmojiControl","TARGET_EMOJI_CONTAINER_SIZE","MERGE_EMOJI_SIZE","_useAppSelector","rightEmoji","leftEmoji","mergedEmojiPath","join","M","isLeft","prompt","selectedEmoji","activeEmojiContainer","SelectedEmojiContainersEnum","LEFT","SELECTED_EMOJI_CONTAINER_SIZE","activateEmojiContainer","answer2","answer1","SelectedEmojiControl","RIGHT","SHOW_ANSWER_PRICE","CountContainer","PromptContainer","_templateObject3","Content","_templateObject4","NavigationContainer","TimeControl","PauseControl","WinCountControl","DiamondScoreControl","PromptControl","TargetEmojiControl","MergeEmojiControl","SelectedEmojiPanel","Keyboard"],"sourceRoot":""}